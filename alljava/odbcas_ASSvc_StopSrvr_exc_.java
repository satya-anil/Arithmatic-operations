// @ @ @ START COPYRIGHT @ @ @
//
// Copyright 2006
// Hewlett-Packard Development Company, L.P.
// Protected as an unpublished work.
// All rights reserved.
//
// The computer program listings, specifications and
// documentation herein are the property of Compaq Computer
// Corporation and successor entities such as Hewlett-Packard
// Development Company, L.P., or a third party supplier and
// shall not be reproduced, copied, disclosed, or used in whole
// or in part for any reason without the prior express written
// permission of Hewlett-Packard Development Company, L.P.
//
// @ @ @ END COPYRIGHT @ @ @

package com.tandem.t4jdbc;

import java.nio.charset.CharacterCodingException;
import java.nio.charset.UnsupportedCharsetException;
import java.sql.SQLException;

class odbcas_ASSvc_StopSrvr_exc_ {

	int exception_nr;

	int exception_detail;

	//
	// If the third element is not zero, then it is an offset
	// to a character array that contains a message.
	//
	String ErrorText;

	int errorCode;

	//
	// It looks like ODBC doesn't generate error text in all
	// error cases, so the following variable will contain
	// any error text generated by this JDBC driver.
	// Note, this variable is not part of the message, but it
	// represents a value stored in the SQLMXMessages_*.properties file.
	//

	String clientErrorText;

	static final int odbcas_ASSvc_StopSrvr_ASParamError_exn_ = 1;

	static final int odbcas_ASSvc_StopSrvr_ASNotAvailable_exn_ = 2;

	static final int odbcas_ASSvc_StopSrvr_SrvrNotFound_exn_ = 3;

	static final int odbcas_ASSvc_StopSrvr_SrvrInUseByAnotherClient_exn_ = 4;

	static final int odbcas_ASSvc_StopSrvr_ProcessStopError_exn_ = 5;

	// -------------------------------------------------------------------
	odbcas_ASSvc_StopSrvr_exc_() {
		// Do nothing constructor
	}

	// -------------------------------------------------------------------
	void extractFromByteArray(LogicalByteArray buffer1, InterfaceConnection ic)
			throws SQLException, UnsupportedCharsetException,
			CharacterCodingException {
		exception_nr = buffer1.extractInt();
		exception_detail = buffer1.extractInt();

		String temp0 = Integer.toString(exception_nr);
		String temp1 = Integer.toString(exception_detail);

		switch (exception_nr) {
		case TRANSPORT.CEE_SUCCESS:
			break;
		case odbcas_ASSvc_StopSrvr_ASParamError_exn_:
		case odbcas_ASSvc_StopSrvr_SrvrNotFound_exn_:
		case odbcas_ASSvc_StopSrvr_ProcessStopError_exn_:
		case odbcas_ASSvc_StopSrvr_SrvrInUseByAnotherClient_exn_:
			ErrorText = ic.decodeBytes(buffer1.extractString(), 1);
			throw SQLMXMessages.createSQLException(null, ic.getLocale(),
					"ids_program_error", ErrorText);
		case odbcas_ASSvc_StopSrvr_ASNotAvailable_exn_:
			ErrorText = ic.decodeBytes(buffer1.extractString(), 1);
			throw SQLMXMessages.createSQLException(null, ic.getLocale(),
					"ids_assoc_srvr_not_available", ErrorText);

		default:
			throw SQLMXMessages.createSQLException(null, ic.getLocale(),
					"unknown_error", null);
		} // end switch
	} // end extractFromByteArray
} // end odbcas_ASSvc_StopSrvr_exc_
